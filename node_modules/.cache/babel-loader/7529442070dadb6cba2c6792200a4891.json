{"ast":null,"code":"var _jsxFileName = \"/Users/purush/OWN-WEBSITES/Portfoilio/client/src/components/Projects.jsx\";\nimport React from \"react\";\nimport RenderProjects from \"./dataSet\";\nimport RenderTypes from \"./ProjectTypes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Project extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: null,\n      isLoaded: false\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3001/api\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    });\n  }\n\n  render() {\n    const search = window.location.search;\n    const params = new URLSearchParams(search);\n    const tag = params.get('tag');\n    const type = params.get(\"type\");\n    const {\n      items\n    } = this.state; // console.log(items);\n\n    const loadingStyle = {\n      \"padding\": \"10%\"\n    };\n\n    if (!this.state.isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        style: loadingStyle,\n        children: \" Loading.... \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this);\n    } else {\n      const filteredData = items.docs.filter(a => a.tag === tag);\n      console.log(filteredData);\n\n      if (tag === \"python\" && type === null) {\n        return /*#__PURE__*/_jsxDEV(RenderTypes, {\n          items: filteredData,\n          count: filteredData.length\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 24\n        }, this);\n      } else return /*#__PURE__*/_jsxDEV(RenderProjects, {\n        items: filteredData,\n        type: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 24\n      }, this);\n    }\n  }\n\n}\n\nexport default Project;","map":{"version":3,"sources":["/Users/purush/OWN-WEBSITES/Portfoilio/client/src/components/Projects.jsx"],"names":["React","RenderProjects","RenderTypes","Project","Component","constructor","props","state","items","isLoaded","componentDidMount","fetch","headers","then","res","json","result","setState","render","search","window","location","params","URLSearchParams","tag","get","type","loadingStyle","filteredData","docs","filter","a","console","log","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,WAA3B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;;AAEA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE;AAFD,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,KAAK,CAAC,2BAAD,EAA8B;AAC/BC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL,kBAAU;AAFL;AADsB,KAA9B,CAAL,CAMKC,IANL,CAMUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EANjB,EAOKF,IAPL,CAOUG,MAAM,IAAI;AACZ,WAAKC,QAAL,CAAc;AACVR,QAAAA,QAAQ,EAAE,IADA;AAEVD,QAAAA,KAAK,EAAEQ;AAFG,OAAd;AAIH,KAZL;AAaH;;AAEDE,EAAAA,MAAM,GAAG;AAEL,UAAMC,MAAM,GAAGC,MAAM,CAACC,QAAP,CAAgBF,MAA/B;AACA,UAAMG,MAAM,GAAG,IAAIC,eAAJ,CAAoBJ,MAApB,CAAf;AACA,UAAMK,GAAG,GAAGF,MAAM,CAACG,GAAP,CAAW,KAAX,CAAZ;AACA,UAAMC,IAAI,GAAGJ,MAAM,CAACG,GAAP,CAAW,MAAX,CAAb;AAEA,UAAM;AAAEjB,MAAAA;AAAF,QAAY,KAAKD,KAAvB,CAPK,CAQL;;AACA,UAAMoB,YAAY,GAAG;AAAE,iBAAW;AAAb,KAArB;;AAEA,QAAI,CAAC,KAAKpB,KAAL,CAAWE,QAAhB,EAA0B;AACtB,0BAAO;AAAK,QAAA,KAAK,EAAEkB,YAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAFD,MAEO;AACH,YAAMC,YAAY,GAAGpB,KAAK,CAACqB,IAAN,CAAWC,MAAX,CAAmBC,CAAD,IAAOA,CAAC,CAACP,GAAF,KAAUA,GAAnC,CAArB;AACAQ,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;;AACA,UAAIJ,GAAG,KAAK,QAAR,IAAoBE,IAAI,KAAK,IAAjC,EAAuC;AAEnC,4BAAO,QAAC,WAAD;AAAa,UAAA,KAAK,EAAEE,YAApB;AAAkC,UAAA,KAAK,EAAEA,YAAY,CAACM;AAAtD;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEH,OAJD,MAKI,oBAAO,QAAC,cAAD;AAAgB,QAAA,KAAK,EAAEN,YAAvB;AAAqC,QAAA,IAAI,EAAEF;AAA3C;AAAA;AAAA;AAAA;AAAA,cAAP;AACP;AAEJ;;AAjDiC;;AAoDtC,eAAevB,OAAf","sourcesContent":["import React from \"react\";\nimport RenderProjects from \"./dataSet\";\nimport RenderTypes from \"./ProjectTypes\";\n\nclass Project extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: null,\n            isLoaded: false,\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"http://localhost:3001/api\", {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            }\n        })\n            .then(res => res.json())\n            .then(result => {\n                this.setState({\n                    isLoaded: true,\n                    items: result\n                });\n            });\n    }\n\n    render() {\n\n        const search = window.location.search;\n        const params = new URLSearchParams(search);\n        const tag = params.get('tag');\n        const type = params.get(\"type\");\n\n        const { items } = this.state;\n        // console.log(items);\n        const loadingStyle = { \"padding\": \"10%\" }\n\n        if (!this.state.isLoaded) {\n            return <div style={loadingStyle}> Loading.... </div>\n        } else {\n            const filteredData = items.docs.filter((a) => a.tag === tag);\n            console.log(filteredData);\n            if (tag === \"python\" && type === null) {\n\n                return <RenderTypes items={filteredData} count={filteredData.length} />\n\n            } else\n                return <RenderProjects items={filteredData} type={type} />\n        }\n\n    }\n}\n\nexport default Project;"]},"metadata":{},"sourceType":"module"}