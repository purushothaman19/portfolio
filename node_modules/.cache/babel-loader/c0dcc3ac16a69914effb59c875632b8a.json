{"ast":null,"code":"/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends, __values } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nimport { getNormalizedEventCoords } from './util'; // Activation events registered on the root element of each instance for activation\n\nvar ACTIVATION_EVENT_TYPES = ['touchstart', 'pointerdown', 'mousedown', 'keydown']; // Deactivation events registered on documentElement when a pointer-related down event occurs\n\nvar POINTER_DEACTIVATION_EVENT_TYPES = ['touchend', 'pointerup', 'mouseup', 'contextmenu']; // simultaneous nested activations\n\nvar activatedTargets = [];\n\nvar MDCRippleFoundation =\n/** @class */\nfunction (_super) {\n  __extends(MDCRippleFoundation, _super);\n\n  function MDCRippleFoundation(adapter) {\n    var _this = _super.call(this, __assign(__assign({}, MDCRippleFoundation.defaultAdapter), adapter)) || this;\n\n    _this.activationAnimationHasEnded = false;\n    _this.activationTimer = 0;\n    _this.fgDeactivationRemovalTimer = 0;\n    _this.fgScale = '0';\n    _this.frame = {\n      width: 0,\n      height: 0\n    };\n    _this.initialSize = 0;\n    _this.layoutFrame = 0;\n    _this.maxRadius = 0;\n    _this.unboundedCoords = {\n      left: 0,\n      top: 0\n    };\n    _this.activationState = _this.defaultActivationState();\n\n    _this.activationTimerCallback = function () {\n      _this.activationAnimationHasEnded = true;\n\n      _this.runDeactivationUXLogicIfReady();\n    };\n\n    _this.activateHandler = function (e) {\n      _this.activateImpl(e);\n    };\n\n    _this.deactivateHandler = function () {\n      _this.deactivateImpl();\n    };\n\n    _this.focusHandler = function () {\n      _this.handleFocus();\n    };\n\n    _this.blurHandler = function () {\n      _this.handleBlur();\n    };\n\n    _this.resizeHandler = function () {\n      _this.layout();\n    };\n\n    return _this;\n  }\n\n  Object.defineProperty(MDCRippleFoundation, \"cssClasses\", {\n    get: function () {\n      return cssClasses;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCRippleFoundation, \"strings\", {\n    get: function () {\n      return strings;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCRippleFoundation, \"numbers\", {\n    get: function () {\n      return numbers;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(MDCRippleFoundation, \"defaultAdapter\", {\n    get: function () {\n      return {\n        addClass: function () {\n          return undefined;\n        },\n        browserSupportsCssVars: function () {\n          return true;\n        },\n        computeBoundingRect: function () {\n          return {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n            width: 0,\n            height: 0\n          };\n        },\n        containsEventTarget: function () {\n          return true;\n        },\n        deregisterDocumentInteractionHandler: function () {\n          return undefined;\n        },\n        deregisterInteractionHandler: function () {\n          return undefined;\n        },\n        deregisterResizeHandler: function () {\n          return undefined;\n        },\n        getWindowPageOffset: function () {\n          return {\n            x: 0,\n            y: 0\n          };\n        },\n        isSurfaceActive: function () {\n          return true;\n        },\n        isSurfaceDisabled: function () {\n          return true;\n        },\n        isUnbounded: function () {\n          return true;\n        },\n        registerDocumentInteractionHandler: function () {\n          return undefined;\n        },\n        registerInteractionHandler: function () {\n          return undefined;\n        },\n        registerResizeHandler: function () {\n          return undefined;\n        },\n        removeClass: function () {\n          return undefined;\n        },\n        updateCssVariable: function () {\n          return undefined;\n        }\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  MDCRippleFoundation.prototype.init = function () {\n    var _this = this;\n\n    var supportsPressRipple = this.supportsPressRipple();\n    this.registerRootHandlers(supportsPressRipple);\n\n    if (supportsPressRipple) {\n      var _a = MDCRippleFoundation.cssClasses,\n          ROOT_1 = _a.ROOT,\n          UNBOUNDED_1 = _a.UNBOUNDED;\n      requestAnimationFrame(function () {\n        _this.adapter.addClass(ROOT_1);\n\n        if (_this.adapter.isUnbounded()) {\n          _this.adapter.addClass(UNBOUNDED_1); // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n\n\n          _this.layoutInternal();\n        }\n      });\n    }\n  };\n\n  MDCRippleFoundation.prototype.destroy = function () {\n    var _this = this;\n\n    if (this.supportsPressRipple()) {\n      if (this.activationTimer) {\n        clearTimeout(this.activationTimer);\n        this.activationTimer = 0;\n        this.adapter.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n      }\n\n      if (this.fgDeactivationRemovalTimer) {\n        clearTimeout(this.fgDeactivationRemovalTimer);\n        this.fgDeactivationRemovalTimer = 0;\n        this.adapter.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n      }\n\n      var _a = MDCRippleFoundation.cssClasses,\n          ROOT_2 = _a.ROOT,\n          UNBOUNDED_2 = _a.UNBOUNDED;\n      requestAnimationFrame(function () {\n        _this.adapter.removeClass(ROOT_2);\n\n        _this.adapter.removeClass(UNBOUNDED_2);\n\n        _this.removeCssVars();\n      });\n    }\n\n    this.deregisterRootHandlers();\n    this.deregisterDeactivationHandlers();\n  };\n  /**\n   * @param evt Optional event containing position information.\n   */\n\n\n  MDCRippleFoundation.prototype.activate = function (evt) {\n    this.activateImpl(evt);\n  };\n\n  MDCRippleFoundation.prototype.deactivate = function () {\n    this.deactivateImpl();\n  };\n\n  MDCRippleFoundation.prototype.layout = function () {\n    var _this = this;\n\n    if (this.layoutFrame) {\n      cancelAnimationFrame(this.layoutFrame);\n    }\n\n    this.layoutFrame = requestAnimationFrame(function () {\n      _this.layoutInternal();\n\n      _this.layoutFrame = 0;\n    });\n  };\n\n  MDCRippleFoundation.prototype.setUnbounded = function (unbounded) {\n    var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;\n\n    if (unbounded) {\n      this.adapter.addClass(UNBOUNDED);\n    } else {\n      this.adapter.removeClass(UNBOUNDED);\n    }\n  };\n\n  MDCRippleFoundation.prototype.handleFocus = function () {\n    var _this = this;\n\n    requestAnimationFrame(function () {\n      return _this.adapter.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);\n    });\n  };\n\n  MDCRippleFoundation.prototype.handleBlur = function () {\n    var _this = this;\n\n    requestAnimationFrame(function () {\n      return _this.adapter.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED);\n    });\n  };\n  /**\n   * We compute this property so that we are not querying information about the client\n   * until the point in time where the foundation requests it. This prevents scenarios where\n   * client-side feature-detection may happen too early, such as when components are rendered on the server\n   * and then initialized at mount time on the client.\n   */\n\n\n  MDCRippleFoundation.prototype.supportsPressRipple = function () {\n    return this.adapter.browserSupportsCssVars();\n  };\n\n  MDCRippleFoundation.prototype.defaultActivationState = function () {\n    return {\n      activationEvent: undefined,\n      hasDeactivationUXRun: false,\n      isActivated: false,\n      isProgrammatic: false,\n      wasActivatedByPointer: false,\n      wasElementMadeActive: false\n    };\n  };\n  /**\n   * supportsPressRipple Passed from init to save a redundant function call\n   */\n\n\n  MDCRippleFoundation.prototype.registerRootHandlers = function (supportsPressRipple) {\n    var e_1, _a;\n\n    if (supportsPressRipple) {\n      try {\n        for (var ACTIVATION_EVENT_TYPES_1 = __values(ACTIVATION_EVENT_TYPES), ACTIVATION_EVENT_TYPES_1_1 = ACTIVATION_EVENT_TYPES_1.next(); !ACTIVATION_EVENT_TYPES_1_1.done; ACTIVATION_EVENT_TYPES_1_1 = ACTIVATION_EVENT_TYPES_1.next()) {\n          var evtType = ACTIVATION_EVENT_TYPES_1_1.value;\n          this.adapter.registerInteractionHandler(evtType, this.activateHandler);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (ACTIVATION_EVENT_TYPES_1_1 && !ACTIVATION_EVENT_TYPES_1_1.done && (_a = ACTIVATION_EVENT_TYPES_1.return)) _a.call(ACTIVATION_EVENT_TYPES_1);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      if (this.adapter.isUnbounded()) {\n        this.adapter.registerResizeHandler(this.resizeHandler);\n      }\n    }\n\n    this.adapter.registerInteractionHandler('focus', this.focusHandler);\n    this.adapter.registerInteractionHandler('blur', this.blurHandler);\n  };\n\n  MDCRippleFoundation.prototype.registerDeactivationHandlers = function (evt) {\n    var e_2, _a;\n\n    if (evt.type === 'keydown') {\n      this.adapter.registerInteractionHandler('keyup', this.deactivateHandler);\n    } else {\n      try {\n        for (var POINTER_DEACTIVATION_EVENT_TYPES_1 = __values(POINTER_DEACTIVATION_EVENT_TYPES), POINTER_DEACTIVATION_EVENT_TYPES_1_1 = POINTER_DEACTIVATION_EVENT_TYPES_1.next(); !POINTER_DEACTIVATION_EVENT_TYPES_1_1.done; POINTER_DEACTIVATION_EVENT_TYPES_1_1 = POINTER_DEACTIVATION_EVENT_TYPES_1.next()) {\n          var evtType = POINTER_DEACTIVATION_EVENT_TYPES_1_1.value;\n          this.adapter.registerDocumentInteractionHandler(evtType, this.deactivateHandler);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (POINTER_DEACTIVATION_EVENT_TYPES_1_1 && !POINTER_DEACTIVATION_EVENT_TYPES_1_1.done && (_a = POINTER_DEACTIVATION_EVENT_TYPES_1.return)) _a.call(POINTER_DEACTIVATION_EVENT_TYPES_1);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n  };\n\n  MDCRippleFoundation.prototype.deregisterRootHandlers = function () {\n    var e_3, _a;\n\n    try {\n      for (var ACTIVATION_EVENT_TYPES_2 = __values(ACTIVATION_EVENT_TYPES), ACTIVATION_EVENT_TYPES_2_1 = ACTIVATION_EVENT_TYPES_2.next(); !ACTIVATION_EVENT_TYPES_2_1.done; ACTIVATION_EVENT_TYPES_2_1 = ACTIVATION_EVENT_TYPES_2.next()) {\n        var evtType = ACTIVATION_EVENT_TYPES_2_1.value;\n        this.adapter.deregisterInteractionHandler(evtType, this.activateHandler);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (ACTIVATION_EVENT_TYPES_2_1 && !ACTIVATION_EVENT_TYPES_2_1.done && (_a = ACTIVATION_EVENT_TYPES_2.return)) _a.call(ACTIVATION_EVENT_TYPES_2);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    this.adapter.deregisterInteractionHandler('focus', this.focusHandler);\n    this.adapter.deregisterInteractionHandler('blur', this.blurHandler);\n\n    if (this.adapter.isUnbounded()) {\n      this.adapter.deregisterResizeHandler(this.resizeHandler);\n    }\n  };\n\n  MDCRippleFoundation.prototype.deregisterDeactivationHandlers = function () {\n    var e_4, _a;\n\n    this.adapter.deregisterInteractionHandler('keyup', this.deactivateHandler);\n\n    try {\n      for (var POINTER_DEACTIVATION_EVENT_TYPES_2 = __values(POINTER_DEACTIVATION_EVENT_TYPES), POINTER_DEACTIVATION_EVENT_TYPES_2_1 = POINTER_DEACTIVATION_EVENT_TYPES_2.next(); !POINTER_DEACTIVATION_EVENT_TYPES_2_1.done; POINTER_DEACTIVATION_EVENT_TYPES_2_1 = POINTER_DEACTIVATION_EVENT_TYPES_2.next()) {\n        var evtType = POINTER_DEACTIVATION_EVENT_TYPES_2_1.value;\n        this.adapter.deregisterDocumentInteractionHandler(evtType, this.deactivateHandler);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (POINTER_DEACTIVATION_EVENT_TYPES_2_1 && !POINTER_DEACTIVATION_EVENT_TYPES_2_1.done && (_a = POINTER_DEACTIVATION_EVENT_TYPES_2.return)) _a.call(POINTER_DEACTIVATION_EVENT_TYPES_2);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n  };\n\n  MDCRippleFoundation.prototype.removeCssVars = function () {\n    var _this = this;\n\n    var rippleStrings = MDCRippleFoundation.strings;\n    var keys = Object.keys(rippleStrings);\n    keys.forEach(function (key) {\n      if (key.indexOf('VAR_') === 0) {\n        _this.adapter.updateCssVariable(rippleStrings[key], null);\n      }\n    });\n  };\n\n  MDCRippleFoundation.prototype.activateImpl = function (evt) {\n    var _this = this;\n\n    if (this.adapter.isSurfaceDisabled()) {\n      return;\n    }\n\n    var activationState = this.activationState;\n\n    if (activationState.isActivated) {\n      return;\n    } // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n\n\n    var previousActivationEvent = this.previousActivationEvent;\n    var isSameInteraction = previousActivationEvent && evt !== undefined && previousActivationEvent.type !== evt.type;\n\n    if (isSameInteraction) {\n      return;\n    }\n\n    activationState.isActivated = true;\n    activationState.isProgrammatic = evt === undefined;\n    activationState.activationEvent = evt;\n    activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : evt !== undefined && (evt.type === 'mousedown' || evt.type === 'touchstart' || evt.type === 'pointerdown');\n    var hasActivatedChild = evt !== undefined && activatedTargets.length > 0 && activatedTargets.some(function (target) {\n      return _this.adapter.containsEventTarget(target);\n    });\n\n    if (hasActivatedChild) {\n      // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n      this.resetActivationState();\n      return;\n    }\n\n    if (evt !== undefined) {\n      activatedTargets.push(evt.target);\n      this.registerDeactivationHandlers(evt);\n    }\n\n    activationState.wasElementMadeActive = this.checkElementMadeActive(evt);\n\n    if (activationState.wasElementMadeActive) {\n      this.animateActivation();\n    }\n\n    requestAnimationFrame(function () {\n      // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n      activatedTargets = [];\n\n      if (!activationState.wasElementMadeActive && evt !== undefined && (evt.key === ' ' || evt.keyCode === 32)) {\n        // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n        // active states inconsistently when they're called within event handling code:\n        // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n        // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n        // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n        // variable is set within a rAF callback for a submit button interaction (#2241).\n        activationState.wasElementMadeActive = _this.checkElementMadeActive(evt);\n\n        if (activationState.wasElementMadeActive) {\n          _this.animateActivation();\n        }\n      }\n\n      if (!activationState.wasElementMadeActive) {\n        // Reset activation state immediately if element was not made active.\n        _this.activationState = _this.defaultActivationState();\n      }\n    });\n  };\n\n  MDCRippleFoundation.prototype.checkElementMadeActive = function (evt) {\n    return evt !== undefined && evt.type === 'keydown' ? this.adapter.isSurfaceActive() : true;\n  };\n\n  MDCRippleFoundation.prototype.animateActivation = function () {\n    var _this = this;\n\n    var _a = MDCRippleFoundation.strings,\n        VAR_FG_TRANSLATE_START = _a.VAR_FG_TRANSLATE_START,\n        VAR_FG_TRANSLATE_END = _a.VAR_FG_TRANSLATE_END;\n    var _b = MDCRippleFoundation.cssClasses,\n        FG_DEACTIVATION = _b.FG_DEACTIVATION,\n        FG_ACTIVATION = _b.FG_ACTIVATION;\n    var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;\n    this.layoutInternal();\n    var translateStart = '';\n    var translateEnd = '';\n\n    if (!this.adapter.isUnbounded()) {\n      var _c = this.getFgTranslationCoordinates(),\n          startPoint = _c.startPoint,\n          endPoint = _c.endPoint;\n\n      translateStart = startPoint.x + \"px, \" + startPoint.y + \"px\";\n      translateEnd = endPoint.x + \"px, \" + endPoint.y + \"px\";\n    }\n\n    this.adapter.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n    this.adapter.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd); // Cancel any ongoing activation/deactivation animations\n\n    clearTimeout(this.activationTimer);\n    clearTimeout(this.fgDeactivationRemovalTimer);\n    this.rmBoundedActivationClasses();\n    this.adapter.removeClass(FG_DEACTIVATION); // Force layout in order to re-trigger the animation.\n\n    this.adapter.computeBoundingRect();\n    this.adapter.addClass(FG_ACTIVATION);\n    this.activationTimer = setTimeout(function () {\n      _this.activationTimerCallback();\n    }, DEACTIVATION_TIMEOUT_MS);\n  };\n\n  MDCRippleFoundation.prototype.getFgTranslationCoordinates = function () {\n    var _a = this.activationState,\n        activationEvent = _a.activationEvent,\n        wasActivatedByPointer = _a.wasActivatedByPointer;\n    var startPoint;\n\n    if (wasActivatedByPointer) {\n      startPoint = getNormalizedEventCoords(activationEvent, this.adapter.getWindowPageOffset(), this.adapter.computeBoundingRect());\n    } else {\n      startPoint = {\n        x: this.frame.width / 2,\n        y: this.frame.height / 2\n      };\n    } // Center the element around the start point.\n\n\n    startPoint = {\n      x: startPoint.x - this.initialSize / 2,\n      y: startPoint.y - this.initialSize / 2\n    };\n    var endPoint = {\n      x: this.frame.width / 2 - this.initialSize / 2,\n      y: this.frame.height / 2 - this.initialSize / 2\n    };\n    return {\n      startPoint: startPoint,\n      endPoint: endPoint\n    };\n  };\n\n  MDCRippleFoundation.prototype.runDeactivationUXLogicIfReady = function () {\n    var _this = this; // This method is called both when a pointing device is released, and when the activation animation ends.\n    // The deactivation animation should only run after both of those occur.\n\n\n    var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;\n    var _a = this.activationState,\n        hasDeactivationUXRun = _a.hasDeactivationUXRun,\n        isActivated = _a.isActivated;\n    var activationHasEnded = hasDeactivationUXRun || !isActivated;\n\n    if (activationHasEnded && this.activationAnimationHasEnded) {\n      this.rmBoundedActivationClasses();\n      this.adapter.addClass(FG_DEACTIVATION);\n      this.fgDeactivationRemovalTimer = setTimeout(function () {\n        _this.adapter.removeClass(FG_DEACTIVATION);\n      }, numbers.FG_DEACTIVATION_MS);\n    }\n  };\n\n  MDCRippleFoundation.prototype.rmBoundedActivationClasses = function () {\n    var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;\n    this.adapter.removeClass(FG_ACTIVATION);\n    this.activationAnimationHasEnded = false;\n    this.adapter.computeBoundingRect();\n  };\n\n  MDCRippleFoundation.prototype.resetActivationState = function () {\n    var _this = this;\n\n    this.previousActivationEvent = this.activationState.activationEvent;\n    this.activationState = this.defaultActivationState(); // Touch devices may fire additional events for the same interaction within a short time.\n    // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n\n    setTimeout(function () {\n      return _this.previousActivationEvent = undefined;\n    }, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n  };\n\n  MDCRippleFoundation.prototype.deactivateImpl = function () {\n    var _this = this;\n\n    var activationState = this.activationState; // This can happen in scenarios such as when you have a keyup event that blurs the element.\n\n    if (!activationState.isActivated) {\n      return;\n    }\n\n    var state = __assign({}, activationState);\n\n    if (activationState.isProgrammatic) {\n      requestAnimationFrame(function () {\n        _this.animateDeactivation(state);\n      });\n      this.resetActivationState();\n    } else {\n      this.deregisterDeactivationHandlers();\n      requestAnimationFrame(function () {\n        _this.activationState.hasDeactivationUXRun = true;\n\n        _this.animateDeactivation(state);\n\n        _this.resetActivationState();\n      });\n    }\n  };\n\n  MDCRippleFoundation.prototype.animateDeactivation = function (_a) {\n    var wasActivatedByPointer = _a.wasActivatedByPointer,\n        wasElementMadeActive = _a.wasElementMadeActive;\n\n    if (wasActivatedByPointer || wasElementMadeActive) {\n      this.runDeactivationUXLogicIfReady();\n    }\n  };\n\n  MDCRippleFoundation.prototype.layoutInternal = function () {\n    var _this = this;\n\n    this.frame = this.adapter.computeBoundingRect();\n    var maxDim = Math.max(this.frame.height, this.frame.width); // Surface diameter is treated differently for unbounded vs. bounded ripples.\n    // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n    // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n    // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n    // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n    // `overflow: hidden`.\n\n    var getBoundedRadius = function () {\n      var hypotenuse = Math.sqrt(Math.pow(_this.frame.width, 2) + Math.pow(_this.frame.height, 2));\n      return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n    };\n\n    this.maxRadius = this.adapter.isUnbounded() ? maxDim : getBoundedRadius(); // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n\n    var initialSize = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE); // Unbounded ripple size should always be even number to equally center align.\n\n    if (this.adapter.isUnbounded() && initialSize % 2 !== 0) {\n      this.initialSize = initialSize - 1;\n    } else {\n      this.initialSize = initialSize;\n    }\n\n    this.fgScale = \"\" + this.maxRadius / this.initialSize;\n    this.updateLayoutCssVars();\n  };\n\n  MDCRippleFoundation.prototype.updateLayoutCssVars = function () {\n    var _a = MDCRippleFoundation.strings,\n        VAR_FG_SIZE = _a.VAR_FG_SIZE,\n        VAR_LEFT = _a.VAR_LEFT,\n        VAR_TOP = _a.VAR_TOP,\n        VAR_FG_SCALE = _a.VAR_FG_SCALE;\n    this.adapter.updateCssVariable(VAR_FG_SIZE, this.initialSize + \"px\");\n    this.adapter.updateCssVariable(VAR_FG_SCALE, this.fgScale);\n\n    if (this.adapter.isUnbounded()) {\n      this.unboundedCoords = {\n        left: Math.round(this.frame.width / 2 - this.initialSize / 2),\n        top: Math.round(this.frame.height / 2 - this.initialSize / 2)\n      };\n      this.adapter.updateCssVariable(VAR_LEFT, this.unboundedCoords.left + \"px\");\n      this.adapter.updateCssVariable(VAR_TOP, this.unboundedCoords.top + \"px\");\n    }\n  };\n\n  return MDCRippleFoundation;\n}(MDCFoundation);\n\nexport { MDCRippleFoundation }; // tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\n\nexport default MDCRippleFoundation;","map":{"version":3,"sources":["foundation.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/**\n * @license\n * Copyright 2016 Google Inc.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\nimport { __assign, __extends, __values } from \"tslib\";\nimport { MDCFoundation } from '@material/base/foundation';\nimport { cssClasses, numbers, strings } from './constants';\nimport { getNormalizedEventCoords } from './util';\n// Activation events registered on the root element of each instance for activation\nvar ACTIVATION_EVENT_TYPES = [\n    'touchstart', 'pointerdown', 'mousedown', 'keydown',\n];\n// Deactivation events registered on documentElement when a pointer-related down event occurs\nvar POINTER_DEACTIVATION_EVENT_TYPES = [\n    'touchend', 'pointerup', 'mouseup', 'contextmenu',\n];\n// simultaneous nested activations\nvar activatedTargets = [];\nvar MDCRippleFoundation = /** @class */ (function (_super) {\n    __extends(MDCRippleFoundation, _super);\n    function MDCRippleFoundation(adapter) {\n        var _this = _super.call(this, __assign(__assign({}, MDCRippleFoundation.defaultAdapter), adapter)) || this;\n        _this.activationAnimationHasEnded = false;\n        _this.activationTimer = 0;\n        _this.fgDeactivationRemovalTimer = 0;\n        _this.fgScale = '0';\n        _this.frame = { width: 0, height: 0 };\n        _this.initialSize = 0;\n        _this.layoutFrame = 0;\n        _this.maxRadius = 0;\n        _this.unboundedCoords = { left: 0, top: 0 };\n        _this.activationState = _this.defaultActivationState();\n        _this.activationTimerCallback = function () {\n            _this.activationAnimationHasEnded = true;\n            _this.runDeactivationUXLogicIfReady();\n        };\n        _this.activateHandler = function (e) {\n            _this.activateImpl(e);\n        };\n        _this.deactivateHandler = function () {\n            _this.deactivateImpl();\n        };\n        _this.focusHandler = function () {\n            _this.handleFocus();\n        };\n        _this.blurHandler = function () {\n            _this.handleBlur();\n        };\n        _this.resizeHandler = function () {\n            _this.layout();\n        };\n        return _this;\n    }\n    Object.defineProperty(MDCRippleFoundation, \"cssClasses\", {\n        get: function () {\n            return cssClasses;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCRippleFoundation, \"strings\", {\n        get: function () {\n            return strings;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCRippleFoundation, \"numbers\", {\n        get: function () {\n            return numbers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(MDCRippleFoundation, \"defaultAdapter\", {\n        get: function () {\n            return {\n                addClass: function () { return undefined; },\n                browserSupportsCssVars: function () { return true; },\n                computeBoundingRect: function () {\n                    return ({ top: 0, right: 0, bottom: 0, left: 0, width: 0, height: 0 });\n                },\n                containsEventTarget: function () { return true; },\n                deregisterDocumentInteractionHandler: function () { return undefined; },\n                deregisterInteractionHandler: function () { return undefined; },\n                deregisterResizeHandler: function () { return undefined; },\n                getWindowPageOffset: function () { return ({ x: 0, y: 0 }); },\n                isSurfaceActive: function () { return true; },\n                isSurfaceDisabled: function () { return true; },\n                isUnbounded: function () { return true; },\n                registerDocumentInteractionHandler: function () { return undefined; },\n                registerInteractionHandler: function () { return undefined; },\n                registerResizeHandler: function () { return undefined; },\n                removeClass: function () { return undefined; },\n                updateCssVariable: function () { return undefined; },\n            };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    MDCRippleFoundation.prototype.init = function () {\n        var _this = this;\n        var supportsPressRipple = this.supportsPressRipple();\n        this.registerRootHandlers(supportsPressRipple);\n        if (supportsPressRipple) {\n            var _a = MDCRippleFoundation.cssClasses, ROOT_1 = _a.ROOT, UNBOUNDED_1 = _a.UNBOUNDED;\n            requestAnimationFrame(function () {\n                _this.adapter.addClass(ROOT_1);\n                if (_this.adapter.isUnbounded()) {\n                    _this.adapter.addClass(UNBOUNDED_1);\n                    // Unbounded ripples need layout logic applied immediately to set coordinates for both shade and ripple\n                    _this.layoutInternal();\n                }\n            });\n        }\n    };\n    MDCRippleFoundation.prototype.destroy = function () {\n        var _this = this;\n        if (this.supportsPressRipple()) {\n            if (this.activationTimer) {\n                clearTimeout(this.activationTimer);\n                this.activationTimer = 0;\n                this.adapter.removeClass(MDCRippleFoundation.cssClasses.FG_ACTIVATION);\n            }\n            if (this.fgDeactivationRemovalTimer) {\n                clearTimeout(this.fgDeactivationRemovalTimer);\n                this.fgDeactivationRemovalTimer = 0;\n                this.adapter.removeClass(MDCRippleFoundation.cssClasses.FG_DEACTIVATION);\n            }\n            var _a = MDCRippleFoundation.cssClasses, ROOT_2 = _a.ROOT, UNBOUNDED_2 = _a.UNBOUNDED;\n            requestAnimationFrame(function () {\n                _this.adapter.removeClass(ROOT_2);\n                _this.adapter.removeClass(UNBOUNDED_2);\n                _this.removeCssVars();\n            });\n        }\n        this.deregisterRootHandlers();\n        this.deregisterDeactivationHandlers();\n    };\n    /**\n     * @param evt Optional event containing position information.\n     */\n    MDCRippleFoundation.prototype.activate = function (evt) {\n        this.activateImpl(evt);\n    };\n    MDCRippleFoundation.prototype.deactivate = function () {\n        this.deactivateImpl();\n    };\n    MDCRippleFoundation.prototype.layout = function () {\n        var _this = this;\n        if (this.layoutFrame) {\n            cancelAnimationFrame(this.layoutFrame);\n        }\n        this.layoutFrame = requestAnimationFrame(function () {\n            _this.layoutInternal();\n            _this.layoutFrame = 0;\n        });\n    };\n    MDCRippleFoundation.prototype.setUnbounded = function (unbounded) {\n        var UNBOUNDED = MDCRippleFoundation.cssClasses.UNBOUNDED;\n        if (unbounded) {\n            this.adapter.addClass(UNBOUNDED);\n        }\n        else {\n            this.adapter.removeClass(UNBOUNDED);\n        }\n    };\n    MDCRippleFoundation.prototype.handleFocus = function () {\n        var _this = this;\n        requestAnimationFrame(function () { return _this.adapter.addClass(MDCRippleFoundation.cssClasses.BG_FOCUSED); });\n    };\n    MDCRippleFoundation.prototype.handleBlur = function () {\n        var _this = this;\n        requestAnimationFrame(function () { return _this.adapter.removeClass(MDCRippleFoundation.cssClasses.BG_FOCUSED); });\n    };\n    /**\n     * We compute this property so that we are not querying information about the client\n     * until the point in time where the foundation requests it. This prevents scenarios where\n     * client-side feature-detection may happen too early, such as when components are rendered on the server\n     * and then initialized at mount time on the client.\n     */\n    MDCRippleFoundation.prototype.supportsPressRipple = function () {\n        return this.adapter.browserSupportsCssVars();\n    };\n    MDCRippleFoundation.prototype.defaultActivationState = function () {\n        return {\n            activationEvent: undefined,\n            hasDeactivationUXRun: false,\n            isActivated: false,\n            isProgrammatic: false,\n            wasActivatedByPointer: false,\n            wasElementMadeActive: false,\n        };\n    };\n    /**\n     * supportsPressRipple Passed from init to save a redundant function call\n     */\n    MDCRippleFoundation.prototype.registerRootHandlers = function (supportsPressRipple) {\n        var e_1, _a;\n        if (supportsPressRipple) {\n            try {\n                for (var ACTIVATION_EVENT_TYPES_1 = __values(ACTIVATION_EVENT_TYPES), ACTIVATION_EVENT_TYPES_1_1 = ACTIVATION_EVENT_TYPES_1.next(); !ACTIVATION_EVENT_TYPES_1_1.done; ACTIVATION_EVENT_TYPES_1_1 = ACTIVATION_EVENT_TYPES_1.next()) {\n                    var evtType = ACTIVATION_EVENT_TYPES_1_1.value;\n                    this.adapter.registerInteractionHandler(evtType, this.activateHandler);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (ACTIVATION_EVENT_TYPES_1_1 && !ACTIVATION_EVENT_TYPES_1_1.done && (_a = ACTIVATION_EVENT_TYPES_1.return)) _a.call(ACTIVATION_EVENT_TYPES_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n            if (this.adapter.isUnbounded()) {\n                this.adapter.registerResizeHandler(this.resizeHandler);\n            }\n        }\n        this.adapter.registerInteractionHandler('focus', this.focusHandler);\n        this.adapter.registerInteractionHandler('blur', this.blurHandler);\n    };\n    MDCRippleFoundation.prototype.registerDeactivationHandlers = function (evt) {\n        var e_2, _a;\n        if (evt.type === 'keydown') {\n            this.adapter.registerInteractionHandler('keyup', this.deactivateHandler);\n        }\n        else {\n            try {\n                for (var POINTER_DEACTIVATION_EVENT_TYPES_1 = __values(POINTER_DEACTIVATION_EVENT_TYPES), POINTER_DEACTIVATION_EVENT_TYPES_1_1 = POINTER_DEACTIVATION_EVENT_TYPES_1.next(); !POINTER_DEACTIVATION_EVENT_TYPES_1_1.done; POINTER_DEACTIVATION_EVENT_TYPES_1_1 = POINTER_DEACTIVATION_EVENT_TYPES_1.next()) {\n                    var evtType = POINTER_DEACTIVATION_EVENT_TYPES_1_1.value;\n                    this.adapter.registerDocumentInteractionHandler(evtType, this.deactivateHandler);\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (POINTER_DEACTIVATION_EVENT_TYPES_1_1 && !POINTER_DEACTIVATION_EVENT_TYPES_1_1.done && (_a = POINTER_DEACTIVATION_EVENT_TYPES_1.return)) _a.call(POINTER_DEACTIVATION_EVENT_TYPES_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n        }\n    };\n    MDCRippleFoundation.prototype.deregisterRootHandlers = function () {\n        var e_3, _a;\n        try {\n            for (var ACTIVATION_EVENT_TYPES_2 = __values(ACTIVATION_EVENT_TYPES), ACTIVATION_EVENT_TYPES_2_1 = ACTIVATION_EVENT_TYPES_2.next(); !ACTIVATION_EVENT_TYPES_2_1.done; ACTIVATION_EVENT_TYPES_2_1 = ACTIVATION_EVENT_TYPES_2.next()) {\n                var evtType = ACTIVATION_EVENT_TYPES_2_1.value;\n                this.adapter.deregisterInteractionHandler(evtType, this.activateHandler);\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (ACTIVATION_EVENT_TYPES_2_1 && !ACTIVATION_EVENT_TYPES_2_1.done && (_a = ACTIVATION_EVENT_TYPES_2.return)) _a.call(ACTIVATION_EVENT_TYPES_2);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        this.adapter.deregisterInteractionHandler('focus', this.focusHandler);\n        this.adapter.deregisterInteractionHandler('blur', this.blurHandler);\n        if (this.adapter.isUnbounded()) {\n            this.adapter.deregisterResizeHandler(this.resizeHandler);\n        }\n    };\n    MDCRippleFoundation.prototype.deregisterDeactivationHandlers = function () {\n        var e_4, _a;\n        this.adapter.deregisterInteractionHandler('keyup', this.deactivateHandler);\n        try {\n            for (var POINTER_DEACTIVATION_EVENT_TYPES_2 = __values(POINTER_DEACTIVATION_EVENT_TYPES), POINTER_DEACTIVATION_EVENT_TYPES_2_1 = POINTER_DEACTIVATION_EVENT_TYPES_2.next(); !POINTER_DEACTIVATION_EVENT_TYPES_2_1.done; POINTER_DEACTIVATION_EVENT_TYPES_2_1 = POINTER_DEACTIVATION_EVENT_TYPES_2.next()) {\n                var evtType = POINTER_DEACTIVATION_EVENT_TYPES_2_1.value;\n                this.adapter.deregisterDocumentInteractionHandler(evtType, this.deactivateHandler);\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (POINTER_DEACTIVATION_EVENT_TYPES_2_1 && !POINTER_DEACTIVATION_EVENT_TYPES_2_1.done && (_a = POINTER_DEACTIVATION_EVENT_TYPES_2.return)) _a.call(POINTER_DEACTIVATION_EVENT_TYPES_2);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n    };\n    MDCRippleFoundation.prototype.removeCssVars = function () {\n        var _this = this;\n        var rippleStrings = MDCRippleFoundation.strings;\n        var keys = Object.keys(rippleStrings);\n        keys.forEach(function (key) {\n            if (key.indexOf('VAR_') === 0) {\n                _this.adapter.updateCssVariable(rippleStrings[key], null);\n            }\n        });\n    };\n    MDCRippleFoundation.prototype.activateImpl = function (evt) {\n        var _this = this;\n        if (this.adapter.isSurfaceDisabled()) {\n            return;\n        }\n        var activationState = this.activationState;\n        if (activationState.isActivated) {\n            return;\n        }\n        // Avoid reacting to follow-on events fired by touch device after an already-processed user interaction\n        var previousActivationEvent = this.previousActivationEvent;\n        var isSameInteraction = previousActivationEvent && evt !== undefined && previousActivationEvent.type !== evt.type;\n        if (isSameInteraction) {\n            return;\n        }\n        activationState.isActivated = true;\n        activationState.isProgrammatic = evt === undefined;\n        activationState.activationEvent = evt;\n        activationState.wasActivatedByPointer = activationState.isProgrammatic ? false : evt !== undefined && (evt.type === 'mousedown' || evt.type === 'touchstart' || evt.type === 'pointerdown');\n        var hasActivatedChild = evt !== undefined &&\n            activatedTargets.length > 0 &&\n            activatedTargets.some(function (target) { return _this.adapter.containsEventTarget(target); });\n        if (hasActivatedChild) {\n            // Immediately reset activation state, while preserving logic that prevents touch follow-on events\n            this.resetActivationState();\n            return;\n        }\n        if (evt !== undefined) {\n            activatedTargets.push(evt.target);\n            this.registerDeactivationHandlers(evt);\n        }\n        activationState.wasElementMadeActive = this.checkElementMadeActive(evt);\n        if (activationState.wasElementMadeActive) {\n            this.animateActivation();\n        }\n        requestAnimationFrame(function () {\n            // Reset array on next frame after the current event has had a chance to bubble to prevent ancestor ripples\n            activatedTargets = [];\n            if (!activationState.wasElementMadeActive\n                && evt !== undefined\n                && (evt.key === ' ' || evt.keyCode === 32)) {\n                // If space was pressed, try again within an rAF call to detect :active, because different UAs report\n                // active states inconsistently when they're called within event handling code:\n                // - https://bugs.chromium.org/p/chromium/issues/detail?id=635971\n                // - https://bugzilla.mozilla.org/show_bug.cgi?id=1293741\n                // We try first outside rAF to support Edge, which does not exhibit this problem, but will crash if a CSS\n                // variable is set within a rAF callback for a submit button interaction (#2241).\n                activationState.wasElementMadeActive = _this.checkElementMadeActive(evt);\n                if (activationState.wasElementMadeActive) {\n                    _this.animateActivation();\n                }\n            }\n            if (!activationState.wasElementMadeActive) {\n                // Reset activation state immediately if element was not made active.\n                _this.activationState = _this.defaultActivationState();\n            }\n        });\n    };\n    MDCRippleFoundation.prototype.checkElementMadeActive = function (evt) {\n        return (evt !== undefined && evt.type === 'keydown') ?\n            this.adapter.isSurfaceActive() :\n            true;\n    };\n    MDCRippleFoundation.prototype.animateActivation = function () {\n        var _this = this;\n        var _a = MDCRippleFoundation.strings, VAR_FG_TRANSLATE_START = _a.VAR_FG_TRANSLATE_START, VAR_FG_TRANSLATE_END = _a.VAR_FG_TRANSLATE_END;\n        var _b = MDCRippleFoundation.cssClasses, FG_DEACTIVATION = _b.FG_DEACTIVATION, FG_ACTIVATION = _b.FG_ACTIVATION;\n        var DEACTIVATION_TIMEOUT_MS = MDCRippleFoundation.numbers.DEACTIVATION_TIMEOUT_MS;\n        this.layoutInternal();\n        var translateStart = '';\n        var translateEnd = '';\n        if (!this.adapter.isUnbounded()) {\n            var _c = this.getFgTranslationCoordinates(), startPoint = _c.startPoint, endPoint = _c.endPoint;\n            translateStart = startPoint.x + \"px, \" + startPoint.y + \"px\";\n            translateEnd = endPoint.x + \"px, \" + endPoint.y + \"px\";\n        }\n        this.adapter.updateCssVariable(VAR_FG_TRANSLATE_START, translateStart);\n        this.adapter.updateCssVariable(VAR_FG_TRANSLATE_END, translateEnd);\n        // Cancel any ongoing activation/deactivation animations\n        clearTimeout(this.activationTimer);\n        clearTimeout(this.fgDeactivationRemovalTimer);\n        this.rmBoundedActivationClasses();\n        this.adapter.removeClass(FG_DEACTIVATION);\n        // Force layout in order to re-trigger the animation.\n        this.adapter.computeBoundingRect();\n        this.adapter.addClass(FG_ACTIVATION);\n        this.activationTimer = setTimeout(function () {\n            _this.activationTimerCallback();\n        }, DEACTIVATION_TIMEOUT_MS);\n    };\n    MDCRippleFoundation.prototype.getFgTranslationCoordinates = function () {\n        var _a = this.activationState, activationEvent = _a.activationEvent, wasActivatedByPointer = _a.wasActivatedByPointer;\n        var startPoint;\n        if (wasActivatedByPointer) {\n            startPoint = getNormalizedEventCoords(activationEvent, this.adapter.getWindowPageOffset(), this.adapter.computeBoundingRect());\n        }\n        else {\n            startPoint = {\n                x: this.frame.width / 2,\n                y: this.frame.height / 2,\n            };\n        }\n        // Center the element around the start point.\n        startPoint = {\n            x: startPoint.x - (this.initialSize / 2),\n            y: startPoint.y - (this.initialSize / 2),\n        };\n        var endPoint = {\n            x: (this.frame.width / 2) - (this.initialSize / 2),\n            y: (this.frame.height / 2) - (this.initialSize / 2),\n        };\n        return { startPoint: startPoint, endPoint: endPoint };\n    };\n    MDCRippleFoundation.prototype.runDeactivationUXLogicIfReady = function () {\n        var _this = this;\n        // This method is called both when a pointing device is released, and when the activation animation ends.\n        // The deactivation animation should only run after both of those occur.\n        var FG_DEACTIVATION = MDCRippleFoundation.cssClasses.FG_DEACTIVATION;\n        var _a = this.activationState, hasDeactivationUXRun = _a.hasDeactivationUXRun, isActivated = _a.isActivated;\n        var activationHasEnded = hasDeactivationUXRun || !isActivated;\n        if (activationHasEnded && this.activationAnimationHasEnded) {\n            this.rmBoundedActivationClasses();\n            this.adapter.addClass(FG_DEACTIVATION);\n            this.fgDeactivationRemovalTimer = setTimeout(function () {\n                _this.adapter.removeClass(FG_DEACTIVATION);\n            }, numbers.FG_DEACTIVATION_MS);\n        }\n    };\n    MDCRippleFoundation.prototype.rmBoundedActivationClasses = function () {\n        var FG_ACTIVATION = MDCRippleFoundation.cssClasses.FG_ACTIVATION;\n        this.adapter.removeClass(FG_ACTIVATION);\n        this.activationAnimationHasEnded = false;\n        this.adapter.computeBoundingRect();\n    };\n    MDCRippleFoundation.prototype.resetActivationState = function () {\n        var _this = this;\n        this.previousActivationEvent = this.activationState.activationEvent;\n        this.activationState = this.defaultActivationState();\n        // Touch devices may fire additional events for the same interaction within a short time.\n        // Store the previous event until it's safe to assume that subsequent events are for new interactions.\n        setTimeout(function () { return _this.previousActivationEvent = undefined; }, MDCRippleFoundation.numbers.TAP_DELAY_MS);\n    };\n    MDCRippleFoundation.prototype.deactivateImpl = function () {\n        var _this = this;\n        var activationState = this.activationState;\n        // This can happen in scenarios such as when you have a keyup event that blurs the element.\n        if (!activationState.isActivated) {\n            return;\n        }\n        var state = __assign({}, activationState);\n        if (activationState.isProgrammatic) {\n            requestAnimationFrame(function () {\n                _this.animateDeactivation(state);\n            });\n            this.resetActivationState();\n        }\n        else {\n            this.deregisterDeactivationHandlers();\n            requestAnimationFrame(function () {\n                _this.activationState.hasDeactivationUXRun = true;\n                _this.animateDeactivation(state);\n                _this.resetActivationState();\n            });\n        }\n    };\n    MDCRippleFoundation.prototype.animateDeactivation = function (_a) {\n        var wasActivatedByPointer = _a.wasActivatedByPointer, wasElementMadeActive = _a.wasElementMadeActive;\n        if (wasActivatedByPointer || wasElementMadeActive) {\n            this.runDeactivationUXLogicIfReady();\n        }\n    };\n    MDCRippleFoundation.prototype.layoutInternal = function () {\n        var _this = this;\n        this.frame = this.adapter.computeBoundingRect();\n        var maxDim = Math.max(this.frame.height, this.frame.width);\n        // Surface diameter is treated differently for unbounded vs. bounded ripples.\n        // Unbounded ripple diameter is calculated smaller since the surface is expected to already be padded appropriately\n        // to extend the hitbox, and the ripple is expected to meet the edges of the padded hitbox (which is typically\n        // square). Bounded ripples, on the other hand, are fully expected to expand beyond the surface's longest diameter\n        // (calculated based on the diagonal plus a constant padding), and are clipped at the surface's border via\n        // `overflow: hidden`.\n        var getBoundedRadius = function () {\n            var hypotenuse = Math.sqrt(Math.pow(_this.frame.width, 2) + Math.pow(_this.frame.height, 2));\n            return hypotenuse + MDCRippleFoundation.numbers.PADDING;\n        };\n        this.maxRadius = this.adapter.isUnbounded() ? maxDim : getBoundedRadius();\n        // Ripple is sized as a fraction of the largest dimension of the surface, then scales up using a CSS scale transform\n        var initialSize = Math.floor(maxDim * MDCRippleFoundation.numbers.INITIAL_ORIGIN_SCALE);\n        // Unbounded ripple size should always be even number to equally center align.\n        if (this.adapter.isUnbounded() && initialSize % 2 !== 0) {\n            this.initialSize = initialSize - 1;\n        }\n        else {\n            this.initialSize = initialSize;\n        }\n        this.fgScale = \"\" + this.maxRadius / this.initialSize;\n        this.updateLayoutCssVars();\n    };\n    MDCRippleFoundation.prototype.updateLayoutCssVars = function () {\n        var _a = MDCRippleFoundation.strings, VAR_FG_SIZE = _a.VAR_FG_SIZE, VAR_LEFT = _a.VAR_LEFT, VAR_TOP = _a.VAR_TOP, VAR_FG_SCALE = _a.VAR_FG_SCALE;\n        this.adapter.updateCssVariable(VAR_FG_SIZE, this.initialSize + \"px\");\n        this.adapter.updateCssVariable(VAR_FG_SCALE, this.fgScale);\n        if (this.adapter.isUnbounded()) {\n            this.unboundedCoords = {\n                left: Math.round((this.frame.width / 2) - (this.initialSize / 2)),\n                top: Math.round((this.frame.height / 2) - (this.initialSize / 2)),\n            };\n            this.adapter.updateCssVariable(VAR_LEFT, this.unboundedCoords.left + \"px\");\n            this.adapter.updateCssVariable(VAR_TOP, this.unboundedCoords.top + \"px\");\n        }\n    };\n    return MDCRippleFoundation;\n}(MDCFoundation));\nexport { MDCRippleFoundation };\n// tslint:disable-next-line:no-default-export Needed for backward compatibility with MDC Web v0.44.0 and earlier.\nexport default MDCRippleFoundation;\n//# sourceMappingURL=foundation.js.map"]},"metadata":{},"sourceType":"module"}